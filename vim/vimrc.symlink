set encoding=utf-8
" Iniciar el manejador de plugins
execute pathogen#infect()

"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif

" Iniciar la syntaxis y thema de onedark
syntax on
colorscheme onedark

" Quitar el color del background
hi Normal ctermbg=NONE

" identacion chida para codigo
filetype plugin indent on

set omnifunc=syntaxcomplete#Complete

let mapleader=","

set timeout timeoutlen=1500
" numero de lineas
set number

set ruler
" Set Proper Tabs
set tabstop=2
set shiftwidth=2
set shiftround
set smarttab
set expandtab

set cursorline

set linespace=15

" el plugin de lightline ya pone el estatus chido
set noshowmode
set laststatus=2

" ya la tecla backspace funciona para borrar
set backspace=2

set wildignore+=*/tmp/*,*/vendor/*,*/node_modules/*,*/.git/*,*.so,*.swp,*.zip

" Case Insensitivity Pattern Matching
set ignorecase

" Overrides ignorecase if pattern contains upcase
set smartcase

" Las @ es lo mejor de esta fuente
if has("gui_running")
  if has("gui_gtk")
    set guifont=Fira\ Mono\ 14
    set gfn=Fira\ Mono\ 14
    set selection=inclusive
  elseif has("gui_macvim")
    set guifont=Fira\ Mono:h16
  endif
endif

" Shortcuts
map <C-k><C-b> :NERDTreeToggle<CR>
" imap <C-Space> <C-x><C-o>

" Moving lines up and down
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" Move to beginning/end of line
nnoremap B 0
nnoremap E $

" Select all text
nnoremap vA ggVG

" ctrlp settings
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
" let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']

" Mardown stuff
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_frontmatter = 1
let g:vim_markdown_conceal = 0

" config de lightline, muestra el nombre del branch igual
let g:lightline = {
      \ 'colorscheme': 'onedark',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'gitbranch#name'
      \ },
      \ }
